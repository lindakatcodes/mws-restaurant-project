const dbPromise=idb.open("restaurantReviewSite",6,function(e){switch(e.oldVersion){case 0:case 1:e.createObjectStore("storeInfo",{keypath:"id"});case 2:e.createObjectStore("reviews",{keypath:"id"});case 3:e.transaction.objectStore("reviews").createIndex("rest_ID","restaurant_id");case 4:e.createObjectStore("tempStorage",{keypath:"id",autoIncrement:!0});case 5:e.transaction.objectStore("tempStorage").createIndex("rest_id","restaurant_id"),e.createObjectStore("tempReviews",{keypath:"id"}),e.transaction.objectStore("tempReviews").createIndex("rest_id","restaurant_id")}});class DBHelper{static get DATABASE_URL(){return"http://localhost:1337/"}static fetchRestaurants(e){fetch(`${DBHelper.DATABASE_URL}restaurants`).then(e=>e.json()).then(function(t){if(t){const n=t;n.forEach(e=>{dbPromise.then(async t=>{const n=t.transaction("storeInfo","readwrite").objectStore("storeInfo");e.hasOwnProperty("offlineUpdate")||(e.offlineUpdate=!1),await n.get(e.id)||(console.log("store is not in db, adding now"),n.add(e,e.id))})}),e(null,n)}else{const n=`Request failed: ${t.status} - ${t.statusText}`;e(n,null)}}).catch(function(){console.log("Sorry, your internet doesn't seem to be working. Pulling cached data for you now!"),dbPromise.then(function(e){return e.transaction("storeInfo","readwrite").objectStore("storeInfo").getAll()}).then(function(t){e(null,t)})})}static fetchReviewsById(e,t){console.log("inside fetchReviewsById");const n=`${DBHelper.DATABASE_URL}reviews/?restaurant_id=${e}`;fetch(n).then(e=>e.json()).then(function(e){if(e){console.log("fetch worked - dealing with response now");const n=e;n.forEach(e=>{dbPromise.then(async t=>{const n=t.transaction("reviews","readwrite").objectStore("reviews");e.hasOwnProperty("offlineUpdate")||(e.offlineUpdate=!1),await n.get(e.id)||(console.log("new review found! adding to cache"),n.add(e,e.id))})}),t(null,n)}else{console.log("fetch worked, but there was not any data");const n=`Request failed: ${e.status} - ${e.statusText}`;t(n,null)}}).catch(function(){console.log("inside the catch function of fetchReviewsById"),dbPromise.then(function(t){return t.transaction("reviews","readwrite").objectStore("reviews").index("rest_ID").getAll(parseInt(e,10))}).then(function(e){t(null,e)})})}static fetchRestaurantById(e,t){DBHelper.fetchRestaurants((n,a)=>{if(n)t(n,null);else{const n=a.find(t=>t.id==e);n?t(null,n):t("Restaurant does not exist",null)}})}static fetchRestaurantByCuisine(e,t){DBHelper.fetchRestaurants((n,a)=>{if(n)t(n,null);else{const n=a.filter(t=>t.cuisine_type==e);t(null,n)}})}static fetchRestaurantByNeighborhood(e,t){DBHelper.fetchRestaurants((n,a)=>{if(n)t(n,null);else{const n=a.filter(t=>t.neighborhood==e);t(null,n)}})}static fetchRestaurantByCuisineAndNeighborhood(e,t,n){DBHelper.fetchRestaurants((a,s)=>{if(a)n(a,null);else{let a=s;"all"!=e&&(a=a.filter(t=>t.cuisine_type==e)),"all"!=t&&(a=a.filter(e=>e.neighborhood==t)),n(null,a)}})}static fetchNeighborhoods(e){DBHelper.fetchRestaurants((t,n)=>{if(t)e(t,null);else{const t=n.map((e,t)=>n[t].neighborhood),a=t.filter((e,n)=>t.indexOf(e)==n);e(null,a)}})}static fetchCuisines(e){DBHelper.fetchRestaurants((t,n)=>{if(t)e(t,null);else{const t=n.map((e,t)=>n[t].cuisine_type),a=t.filter((e,n)=>t.indexOf(e)==n);e(null,a)}})}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e){return`./img/optimized/${e.photograph}-optimized.jpg`}static mapMarkerForRestaurant(e,t){const n=new L.marker([e.latlng.lat,e.latlng.lng],{title:e.name,alt:e.name,url:DBHelper.urlForRestaurant(e)});return n.addTo(newMap),n}static favStatus(e,t){fetch(`http://localhost:1337/restaurants/${t}/?is_favorite=${e}`,{method:"PUT"}).then(()=>{dbPromise.then(async n=>{const a=n.transaction("storeInfo","readwrite"),s=a.objectStore("storeInfo"),o=await s.get(t);return o.is_favorite=e,s.put(o,t),console.log("favorite status is marked!"),a.complete})}).catch(()=>{dbPromise.then(async n=>{const a=n.transaction("storeInfo","readwrite"),s=a.objectStore("storeInfo"),o=await s.get(t);return o.is_favorite=e,o.offlineUpdate=!0,s.put(o,t),console.log("favorite status is marked! will be updated on server when reconnected."),a.complete})})}static toggleFav(e,t){const n=e.querySelector(".on"),a=e.querySelector(".off");n.classList.contains("hide")?(DBHelper.favStatus("true",t),n.classList.toggle("hide"),a.classList.toggle("hide")):a.classList.contains("hide")&&(DBHelper.favStatus("false",t),n.classList.toggle("hide"),a.classList.toggle("hide"))}static stashReview(e,t){"online"===e&&dbPromise.then(e=>{const n=e.transaction("reviews","readwrite");n.objectStore("reviews").add(t,t.id);return n.complete}),"offline"===e&&dbPromise.then(e=>{const n=e.transaction("reviews","readwrite"),a=n.objectStore("reviews");t.offlineUpdate=!0;a.add(t,t.id);return n.complete})}static updateServer(){dbPromise.then(function(e){return e.transaction("storeInfo","readwrite").objectStore("storeInfo").openCursor()}).then(function e(t){if(t)return t.value.offlineUpdate&&(t.value.offlineUpdate=!1,fetch(`http://localhost:1337/restaurants/${t.value.id}/?is_favorite=${t.value.is_favorite}`,{method:"PUT"})),t.continue().then(e)}),dbPromise.then(function(e){return e.transaction("reviews","readwrite").objectStore("reviews").openCursor()}).then(function(e){if(e&&e.value.offlineUpdate){const t={restaurant_id:e.value.restaurant_id,name:e.value.name,rating:parseInt(e.value.rating,10),comments:e.value.comments,offlineUpdate:!1};fetch("http://localhost:1337/reviews/",{method:"POST",body:JSON.stringify(t)})}})}}let restaurants,neighborhoods,cuisines;var newMap,markers=[];document.addEventListener("DOMContentLoaded",e=>{navigator.onLine&&DBHelper.updateServer(),initMap(),fetchNeighborhoods(),fetchCuisines()}),fetchNeighborhoods=(()=>{DBHelper.fetchNeighborhoods((e,t)=>{e?console.error(e):(self.neighborhoods=t,fillNeighborhoodsHTML())})}),fillNeighborhoodsHTML=((e=self.neighborhoods)=>{const t=document.getElementById("neighborhoods-select");e.forEach(e=>{const n=document.createElement("option");n.innerHTML=e,n.value=e,t.append(n)})}),fetchCuisines=(()=>{DBHelper.fetchCuisines((e,t)=>{e?console.error(e):(self.cuisines=t,fillCuisinesHTML())})}),fillCuisinesHTML=((e=self.cuisines)=>{const t=document.getElementById("cuisines-select");e.forEach(e=>{const n=document.createElement("option");n.innerHTML=e,n.value=e,t.append(n)})}),initMap=(()=>{self.newMap=L.map("map",{center:[40.722216,-73.987501],zoom:12,scrollWheelZoom:!1}),L.tileLayer("https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}",{mapboxToken:"pk.eyJ1IjoibGluZGFrdDE2IiwiYSI6ImNqaW1sY3Z4bjAxa2EzcHBmaTZ4aTE2dzQifQ.cOXPk5Jme5zrFsUP3KEgLw",maxZoom:18,attribution:'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',id:"mapbox.streets"}).addTo(newMap),updateRestaurants()}),updateRestaurants=(()=>{const e=document.getElementById("cuisines-select"),t=document.getElementById("neighborhoods-select"),n=e.selectedIndex,a=t.selectedIndex,s=e[n].value,o=t[a].value;DBHelper.fetchRestaurantByCuisineAndNeighborhood(s,o,(e,t)=>{e?console.error(e):(resetRestaurants(t),fillRestaurantsHTML())})}),resetRestaurants=(e=>{self.restaurants=[],document.getElementById("restaurants-list").innerHTML="",self.markers&&self.markers.forEach(e=>e.remove()),self.markers=[],self.restaurants=e}),fillRestaurantsHTML=((e=self.restaurants)=>{const t=document.getElementById("restaurants-list");e.forEach(e=>{t.append(createRestaurantHTML(e)),addMarkersToMap()})}),createRestaurantHTML=(e=>{const t=document.createElement("li"),n=document.createElement("img");n.className="restaurant-img",n.src=DBHelper.imageUrlForRestaurant(e),n.alt=`A photo showcasing the atmosphere of ${e.name}`,t.append(n);const a=document.createElement("button");a.className="favButton",a.setAttribute("aria-label","Toggle this restaurant's favorite status");const s=document.createElement("img");s.src="./img/icons/fav_on.svg",s.className="favorite on",s.alt="Favorite restaurant toggle turned on";const o=document.createElement("img");o.src="./img/icons/fav_off.svg",o.className="favorite off",o.alt="Favorite restaurant toggle turned off","true"==e.is_favorite&&o.classList.add("hide"),"false"==e.is_favorite&&s.classList.add("hide"),a.append(o,s),t.append(a);const r=t.querySelector(".favButton");r.addEventListener("click",function(t){t.preventDefault(),DBHelper.toggleFav(r,e.id)});const i=document.createElement("h3");i.innerHTML=e.name,t.append(i);const c=document.createElement("p");c.innerHTML=e.neighborhood,t.append(c);const l=document.createElement("p");l.innerHTML=e.address,t.append(l);const d=document.createElement("a");return d.innerHTML="View Details",d.setAttribute("aria-label",`View details for ${e.name}`),d.href=DBHelper.urlForRestaurant(e),t.append(d),t}),addMarkersToMap=((e=self.restaurants)=>{e.forEach(e=>{const t=DBHelper.mapMarkerForRestaurant(e,self.newMap);t.on("click",function(){window.location.href=t.options.url}),self.markers.push(t)})});
//# sourceMappingURL=index.js.map
